Starting audit...
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/main/Main.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/checker/Checker.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/checker/CheckerConstants.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/CommerciantOutput.java:14: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/CommerciantOutput.java:14:30: Parameter totalReceived should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/CommerciantOutput.java:14:52: Parameter managers should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/CommerciantOutput.java:14:75: Parameter employees should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/CommerciantOutput.java:14:99: Parameter commerciant should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/UserOutput.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonCreator. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/UserOutput.java:4:8: Unused import - com.fasterxml.jackson.annotation.JsonProperty. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/UserOutput.java:9:18: Variable 'username' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/UserOutput.java:10:18: Variable 'spent' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/UserOutput.java:11:18: Variable 'deposited' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/ActionHandler.java:5:24: Using the '.*' form of import should be avoided - org.poo.commands.*. [AvoidStarImport]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/ActionHandler.java:117: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/ActionHandler.java:121: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/ActionHandler.java:125: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/ActionHandler.java:133: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/ActionHandler.java:137: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/PrintOutput.java:8:8: Unused import - org.poo.bank.accounts.FactoryAccount. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/PrintOutput.java:59:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/PrintOutput.java:61:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/PrintOutput.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/actionhandler/PrintOutput.java:126:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/fileio/CommerciantInput.java:6:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:9:5: Class 'GoldPlan' looks like designed for extension (can be subclassed), but the method 'calculateFee' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoldPlan' final or making the method 'calculateFee' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:10:32: Parameter transactionAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:14:5: Class 'GoldPlan' looks like designed for extension (can be subclassed), but the method 'getThirdCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoldPlan' final or making the method 'getThirdCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:16:16: '0.007' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:19:5: Class 'GoldPlan' looks like designed for extension (can be subclassed), but the method 'getSecondCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoldPlan' final or making the method 'getSecondCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:21:16: '0.0055' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:24:5: Class 'GoldPlan' looks like designed for extension (can be subclassed), but the method 'getFirstCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoldPlan' final or making the method 'getFirstCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:26:16: '0.005' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/GoldPlan.java:29:5: Class 'GoldPlan' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoldPlan' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:9:5: Class 'StudentPlan' looks like designed for extension (can be subclassed), but the method 'calculateFee' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StudentPlan' final or making the method 'calculateFee' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:10:32: Parameter transactionAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:14:5: Class 'StudentPlan' looks like designed for extension (can be subclassed), but the method 'getThirdCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StudentPlan' final or making the method 'getThirdCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:16:16: '0.0025' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:19:5: Class 'StudentPlan' looks like designed for extension (can be subclassed), but the method 'getSecondCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StudentPlan' final or making the method 'getSecondCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:21:16: '0.002' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:24:5: Class 'StudentPlan' looks like designed for extension (can be subclassed), but the method 'getFirstCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StudentPlan' final or making the method 'getFirstCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:26:16: '0.001' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StudentPlan.java:29:5: Class 'StudentPlan' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StudentPlan' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:3:8: Unused import - lombok.Getter. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:4:8: Unused import - lombok.Setter. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/Plan.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:8:5: Class 'SilverPlan' looks like designed for extension (can be subclassed), but the method 'calculateFee' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SilverPlan' final or making the method 'calculateFee' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:9:32: Parameter transactionAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:10:33: '500' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:13:16: '0.001' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:16:5: Class 'SilverPlan' looks like designed for extension (can be subclassed), but the method 'getThirdCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SilverPlan' final or making the method 'getThirdCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:18:16: '0.005' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:21:5: Class 'SilverPlan' looks like designed for extension (can be subclassed), but the method 'getSecondCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SilverPlan' final or making the method 'getSecondCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:23:16: '0.004' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:26:5: Class 'SilverPlan' looks like designed for extension (can be subclassed), but the method 'getFirstCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SilverPlan' final or making the method 'getFirstCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:28:16: '0.003' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/SilverPlan.java:31:5: Class 'SilverPlan' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SilverPlan' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:8:5: Class 'StandardPlan' looks like designed for extension (can be subclassed), but the method 'calculateFee' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardPlan' final or making the method 'calculateFee' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:9:32: Parameter transactionAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:10:16: '0.002' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:13:5: Class 'StandardPlan' looks like designed for extension (can be subclassed), but the method 'getThirdCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardPlan' final or making the method 'getThirdCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:15:16: '0.0025' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:18:5: Class 'StandardPlan' looks like designed for extension (can be subclassed), but the method 'getSecondCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardPlan' final or making the method 'getSecondCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:20:16: '0.002' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:23:5: Class 'StandardPlan' looks like designed for extension (can be subclassed), but the method 'getFirstCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardPlan' final or making the method 'getFirstCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:25:16: '0.001' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/StandardPlan.java:28:5: Class 'StandardPlan' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardPlan' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/PlansFactory.java:3:8: Unused import - org.poo.bank.accounts.Account. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/PlansFactory.java:4:8: Unused import - org.poo.bank.accounts.BasicAccount. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/PlansFactory.java:5:8: Unused import - org.poo.bank.accounts.EconomyAccount. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/PlansFactory.java:6:8: Unused import - org.poo.fileio.CommandInput. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/PlansFactory.java:8:15: Unused import - org.poo.utils.Utils.generateIBAN. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/PlansFactory.java:10:1: Class PlansFactory should be declared as final. [FinalClass]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/plans/PlansFactory.java:18:35: Parameter name should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:9:8: Unused import - org.poo.bank.plans.GoldPlan. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:56:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPlan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPlan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:74:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getBirthDate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getBirthDate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:78:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getOccupation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getOccupation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:82:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'upgradePlan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'upgradePlan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:82:29: Parameter newPlan should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:86:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'calculateCommision' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'calculateCommision' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:86:38: Parameter transactionAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:119:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:121:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:170:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addCardforBusiness' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addCardforBusiness' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:170:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:197:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'findAccountForWithdrawSavings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'findAccountForWithdrawSavings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:197:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:197:50: Parameter currency should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:198:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:199: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:199:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:204:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'userCheckUpgradePlan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'userCheckUpgradePlan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:204:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:204:41: Parameter newPlan should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:205:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:207: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:207:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:212:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'checkUpgradeGoldPlan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'checkUpgradeGoldPlan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:212:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:212:41: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:212:55: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:213:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:213:58: '300' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:214:30: '++' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/User.java:215:33: '5' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:5:8: Unused import - com.fasterxml.jackson.annotation.JsonInclude. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:14:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:18:23: Variable 'users' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:22:19: Variable 'spendingLimits' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:26:19: Variable 'depositLimits' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:32:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:40:31: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:46: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:46:31: Parameter iban should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:46:44: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:46:57: Parameter currency should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:46:74: Parameter email should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:46:88: Parameter bank should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:55:26: '500' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:56:25: '500' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:59:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'isBusinessAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'isBusinessAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:64:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getUsersList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getUsersList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:69:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getSpendingLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getSpendingLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:74:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getDepositLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getDepositLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:79:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'setSpendingLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'setSpendingLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:80:35: Parameter limit should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:85:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'setDepositLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'setDepositLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:86:34: Parameter limit should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:90:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getEmployees' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getEmployees' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:103:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getManagers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getManagers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:116: Line is longer than 100 characters (found 141). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:116:37: Parameter managers should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:116:64: Parameter totalSpent should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:116:96: Parameter totalDeposit should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:116:130: Parameter user should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:121:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:123:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:129:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getTransactionsForBusiness' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getTransactionsForBusiness' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:134:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'calculateTotalSent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'calculateTotalSent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:135:51: Parameter transactions should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:149:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'calculateTotalDeposited' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'calculateTotalDeposited' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:150:56: Parameter transactions should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:157: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:163:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'totalSentForReport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'totalSentForReport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:173:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'totalDepositForReport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'totalDepositForReport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:183:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'checkPaymentBusiness' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'checkPaymentBusiness' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:184:41: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:184:56: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:191:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getManagersUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getManagersUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:192:45: Parameter usersnameList should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:203:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getEmployeesUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getEmployeesUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:204:46: Parameter usersnameList should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:215:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'calculateCommerciants' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'calculateCommerciants' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:216: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:216:58: Parameter transactions should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:216:90: Parameter owner should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:216:97: 'owner' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:221: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:235:26: 'users' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:246: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:253:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getBusinessTransactionFiltered' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getBusinessTransactionFiltered' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:266:5: Class 'BusinessAccount' looks like designed for extension (can be subclassed), but the method 'getAllUserForCommerciantReport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BusinessAccount' final or making the method 'getAllUserForCommerciantReport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:267: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:267:57: Parameter users should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:267:70: 'users' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/BusinessAccount.java:267:77: Parameter userPayments should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:4:8: Unused import - com.fasterxml.jackson.annotation.JsonInclude. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:14:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:18:26: Name 'IBAN' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:124:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'addTransaction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'addTransaction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:124:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:124:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:127:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'addAmount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'addAmount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:157:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getEmployees' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getEmployees' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:157:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:158:43: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:162:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getManagers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getManagers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:162:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:163:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:204:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'isBusinessAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'isBusinessAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:205:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:209:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getUsersList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getUsersList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:209:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:214:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getSpendingLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getSpendingLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:214:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:219:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getDepositLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getDepositLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:219:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:224:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'setSpendingLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'setSpendingLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:224:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:224:35: Parameter limit should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:228:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'setDepositLimits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'setDepositLimits' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:228:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:228:34: Parameter limit should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:232:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getTransactionsForBusiness' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getTransactionsForBusiness' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:232:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:237:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'calculateTotalSent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'calculateTotalSent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:237:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:238:52: Parameter transactions should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:238:70: 'transactions' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:243:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'calculateTotalDeposited' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'calculateTotalDeposited' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:243:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:244:57: Parameter transactions should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:244:75: 'transactions' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:248:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'totalSentForReport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'totalSentForReport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:248:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:253:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'totalDepositForReport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'totalDepositForReport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:253:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:258:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'checkPaymentBusiness' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'checkPaymentBusiness' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:258:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:259:41: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:259:56: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:259:63: 'type' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:263:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getManagersUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getManagersUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:263:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:264:45: Parameter usersnameList should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:268:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getEmployeesUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getEmployeesUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:268:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:269:46: Parameter usersnameList should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:273:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'calculateCommerciants' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'calculateCommerciants' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:273:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:274: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:274:58: Parameter transactions should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:274:76: 'transactions' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:274:90: Parameter owner should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:278:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:278:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:291:5: Class 'Account' looks like designed for extension (can be subclassed), but the method 'getAllUserForCommerciantReport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Account' final or making the method 'getAllUserForCommerciantReport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:291:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:292: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:292:57: Parameter users should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/accounts/Account.java:292:77: Parameter userPayments should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:6:22: Using the '.*' form of import should be avoided - org.poo.fileio.*. [AvoidStarImport]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:170:20: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:194:5: Class 'BankDatabase' looks like designed for extension (can be subclassed), but the method 'findCommerciant' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BankDatabase' final or making the method 'findCommerciant' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:194:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:194:40: Parameter name should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:194:52: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:195:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:196:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:196:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:196:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:201:5: Class 'BankDatabase' looks like designed for extension (can be subclassed), but the method 'findSplitPaymentByUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BankDatabase' final or making the method 'findSplitPaymentByUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:201:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:201:59: Parameter user should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:201:70: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:201:82: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:203:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:204: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:204:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:209:5: Class 'BankDatabase' looks like designed for extension (can be subclassed), but the method 'findAccountForSplitPayment' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BankDatabase' final or making the method 'findAccountForSplitPayment' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:209:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:209:47: Parameter user should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:209:58: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:211:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:212: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:212:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:218:5: Class 'BankDatabase' looks like designed for extension (can be subclassed), but the method 'checkCommerciantAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BankDatabase' final or making the method 'checkCommerciantAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:218:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:218:44: Parameter iban should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:218:56: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:219:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:220:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:225:5: Class 'BankDatabase' looks like designed for extension (can be subclassed), but the method 'getCommerciantByIban' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BankDatabase' final or making the method 'getCommerciantByIban' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:225:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:225:45: Parameter iban should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:225:57: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:226:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/bank/BankDatabase.java:227:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:19:36: Parameter accountsInvolved should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:20:36: Parameter accountsNotAccept should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:21:36: Parameter currency should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:22:36: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:23:36: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:24:36: Parameter transaction should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:33:5: Class 'SplitPaymentTransaction' looks like designed for extension (can be subclassed), but the method 'addTransaction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SplitPaymentTransaction' final or making the method 'addTransaction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:33:32: Parameter bank should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:62:5: Class 'SplitPaymentTransaction' looks like designed for extension (can be subclassed), but the method 'rejectTransaction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SplitPaymentTransaction' final or making the method 'rejectTransaction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:62:35: Parameter bank should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:74:5: Class 'SplitPaymentTransaction' looks like designed for extension (can be subclassed), but the method 'createTransactionError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SplitPaymentTransaction' final or making the method 'createTransactionError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:74:47: Parameter description should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:74:67: Parameter error should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:98:5: Class 'SplitPaymentTransaction' looks like designed for extension (can be subclassed), but the method 'getAmountPerUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SplitPaymentTransaction' final or making the method 'getAmountPerUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/SplitPaymentTransaction.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/CashbackStrategy.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/CashbackStrategy.java:5:8: Unused import - org.poo.transaction.Transaction. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/CashbackStrategy.java:8: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/CashbackStrategy.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/CashbackStrategy.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:5:8: Unused import - org.poo.transaction.Transaction. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:15:5: Class 'NrOfTransactions' looks like designed for extension (can be subclassed), but the method 'calculateCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NrOfTransactions' final or making the method 'calculateCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:16: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:16:37: Parameter bank should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:16:56: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:16:73: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:16:88: Parameter totalAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:16:108: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/NrOfTransactions.java:37:5: Class 'NrOfTransactions' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NrOfTransactions' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:8:5: Class 'SpendingThreshold' looks like designed for extension (can be subclassed), but the method 'calculateCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SpendingThreshold' final or making the method 'calculateCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:9: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:9:37: Parameter bank should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:9:56: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:9:73: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:9:88: Parameter totalAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:9:108: Parameter type should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:12:41: '500' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:14:48: '300' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:16:48: '100' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/cashback/SpendingThreshold.java:22:5: Class 'SpendingThreshold' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SpendingThreshold' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:132:56: 'accountIBAN' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:140:56: 'newPlanType' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:145:5: Class 'TransactionBuilder' looks like designed for extension (can be subclassed), but the method 'amountForUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TransactionBuilder' final or making the method 'amountForUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:145:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:145:65: 'amountForUsers' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:150:5: Class 'TransactionBuilder' looks like designed for extension (can be subclassed), but the method 'splitPaymentType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TransactionBuilder' final or making the method 'splitPaymentType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:150:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:150:61: 'splitPaymentType' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:155:5: Class 'TransactionBuilder' looks like designed for extension (can be subclassed), but the method 'role' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TransactionBuilder' final or making the method 'role' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:155:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:155:49: 'role' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:160:5: Class 'TransactionBuilder' looks like designed for extension (can be subclassed), but the method 'classicAccountIBAN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TransactionBuilder' final or making the method 'classicAccountIBAN' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:160:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:160:63: 'classicAccountIBAN' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:165:5: Class 'TransactionBuilder' looks like designed for extension (can be subclassed), but the method 'savingsAccountIBAN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TransactionBuilder' final or making the method 'savingsAccountIBAN' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:165:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/TransactionBuilder.java:165:63: 'savingsAccountIBAN' hides a field. [HiddenField]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/Commerciant.java:4:8: Unused import - com.google.errorprone.annotations.Keep. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/Commerciant.java:36:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/transaction/Commerciant.java:38:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/BusinessReport.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/BusinessReport.java:69: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:33:5: Class 'UpgradePlan' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UpgradePlan' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:53:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:64:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:67:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:77:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:90:5: Class 'UpgradePlan' looks like designed for extension (can be subclassed), but the method 'calculateExchangeRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UpgradePlan' final or making the method 'calculateExchangeRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:90:41: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:96:5: Class 'UpgradePlan' looks like designed for extension (can be subclassed), but the method 'calculateUpgradeFee' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UpgradePlan' final or making the method 'calculateUpgradeFee' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:96:36: Parameter newPlan should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:96:52: Parameter oldPlan should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:99:34: '100' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:100:32: '350' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/UpgradePlan.java:103:55: '250' is a magic number. [MagicNumber]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/ChangeSpendingLimit.java:25:5: Class 'ChangeSpendingLimit' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeSpendingLimit' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AddNewBusinessAssociate.java:4:8: Unused import - org.poo.actionhandler.PrintOutput. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AddNewBusinessAssociate.java:23:5: Class 'AddNewBusinessAssociate' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddNewBusinessAssociate' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AddNewBusinessAssociate.java:40:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/WithdrawSavings.java:11:8: Unused import - org.poo.bank.cards.Card. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/WithdrawSavings.java:21:8: Unused import - java.util.Locale. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/WithdrawSavings.java:42:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/WithdrawSavings.java:71:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/WithdrawSavings.java:92:5: Class 'WithdrawSavings' looks like designed for extension (can be subclassed), but the method 'calculateExchangeRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WithdrawSavings' final or making the method 'calculateExchangeRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/WithdrawSavings.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/WithdrawSavings.java:92:41: Parameter currency should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/RejectSplitPayment.java:10:8: Unused import - org.poo.bank.accounts.Account. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/RejectSplitPayment.java:26:5: Class 'RejectSplitPayment' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RejectSplitPayment' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/RejectSplitPayment.java:38: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PrintUsers.java:6:8: Unused import - org.poo.bank.User. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PrintUsers.java:7:8: Unused import - org.poo.bank.accounts.Account. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/ChangeInterestRate.java:34:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:76:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:101:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:104: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:110: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:116:5: Class 'SendMoney' looks like designed for extension (can be subclassed), but the method 'calculateExchangeRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SendMoney' final or making the method 'calculateExchangeRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:116:41: Parameter currency should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:122:5: Class 'SendMoney' looks like designed for extension (can be subclassed), but the method 'accountSubCommision' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SendMoney' final or making the method 'accountSubCommision' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:122:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:122:39: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:122:56: Parameter user should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:128:5: Class 'SendMoney' looks like designed for extension (can be subclassed), but the method 'accountAddCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SendMoney' final or making the method 'accountAddCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:128:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:128:36: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SendMoney.java:128:53: Parameter totalAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SplitPayment.java:10:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SplitPayment.java:52: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SplitPayment.java:53: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SplitPayment.java:53:79: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:45:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:88: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:88:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:112:5: Class 'PayOnline' looks like designed for extension (can be subclassed), but the method 'calculateExchangeRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PayOnline' final or making the method 'calculateExchangeRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:112:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:112:41: Parameter currency should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:118:5: Class 'PayOnline' looks like designed for extension (can be subclassed), but the method 'accountSubCommision' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PayOnline' final or making the method 'accountSubCommision' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:118:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:118:37: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:118:54: Parameter user should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:118:65: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:125:5: Class 'PayOnline' looks like designed for extension (can be subclassed), but the method 'accountAddCashback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PayOnline' final or making the method 'accountAddCashback' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:125:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:125:36: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:125:53: Parameter totalAmount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:134:5: Class 'PayOnline' looks like designed for extension (can be subclassed), but the method 'upgradeGoldPlan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PayOnline' final or making the method 'upgradeGoldPlan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:134:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:134:33: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:134:50: Parameter user should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:134:61: Parameter amount should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:134:75: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:137:68: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/PayOnline.java:139:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AcceptSplitPayment.java:26:5: Class 'AcceptSplitPayment' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AcceptSplitPayment' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AcceptSplitPayment.java:38: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/DeleteAccount.java:44: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/ChangeDepositLimit.java:25:5: Class 'ChangeDepositLimit' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeDepositLimit' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CreateCard.java:34:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CreateCard.java:37:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CreateCard.java:38:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CreateCard.java:40:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AddFunds.java:28: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AddFunds.java:29: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AddFunds.java:38:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:14:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:56:53: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:63: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:63:5: Class 'SpendingsReport' looks like designed for extension (can be subclassed), but the method 'createFilteredCommerciants' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SpendingsReport' final or making the method 'createFilteredCommerciants' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:63:57: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:63:74: Parameter filteredTransactions should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:63:113: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/SpendingsReport.java:70: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/AddInterest.java:34:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:13:8: Unused import - org.poo.transaction.Commerciant. [UnusedImports]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:33:5: Class 'CashWithdrawal' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CashWithdrawal' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:90:5: Class 'CashWithdrawal' looks like designed for extension (can be subclassed), but the method 'calculateExchangeRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CashWithdrawal' final or making the method 'calculateExchangeRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:90:41: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:96:5: Class 'CashWithdrawal' looks like designed for extension (can be subclassed), but the method 'accountSubCommision' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CashWithdrawal' final or making the method 'accountSubCommision' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:96:37: Parameter account should be final. [FinalParameters]
[ERROR] /home/marus/Facultate/Anul2/POO/oop_homework3/./src/main/java/org/poo/commands/CashWithdrawal.java:96:54: Parameter user should be final. [FinalParameters]
Audit done.
Checkstyle ends with 450 errors.
